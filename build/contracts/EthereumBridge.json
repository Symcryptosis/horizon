{
  "contractName": "EthereumBridge",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/EthereumBridge.sol\":\"EthereumBridge\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"project:/contracts/EthereumBridge.sol\":{\"keccak256\":\"0x2333cf6468b4b44124984dff660e96e33de3f848aa370f9fe52f21cf135100e5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e27adbe7fca9d3dece016d134b1f39774756efc0138cb26cadf8ad6e5d2373fb\",\"dweb:/ipfs/QmQSkAbK4Af28hwnqBfw3V4ww1PYxAvy8v4ovNGbZoPXdq\"]},\"project:/contracts/lib/RLPReader.sol\":{\"keccak256\":\"0x428958cedf3cd5958a81e0c1416e09c76311874c8c1c63a38a46ee62c233006c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1ca4b13eb03fed1bc7433bac0edb04e9ef9acde39fbce3ac4b225056de2093f1\",\"dweb:/ipfs/Qmc5e3xf3GjPn1Re7mppNXfznWrsKQH3hCT3F9WTjvoh4i\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6102d98061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e610081565b005b610058610113565b6040516100659190610214565b60405180910390f35b61004e61007c3660046101e6565b610122565b6100896101e2565b6001600160a01b031661009a610113565b6001600160a01b0316146100c95760405162461bcd60e51b81526004016100c09061026e565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61012a6101e2565b6001600160a01b031661013b610113565b6001600160a01b0316146101615760405162461bcd60e51b81526004016100c09061026e565b6001600160a01b0381166101875760405162461bcd60e51b81526004016100c090610228565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000602082840312156101f7578081fd5b81356001600160a01b038116811461020d578182fd5b9392505050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220a1cfbf41af7d2539103cb7db809ee7601ec575940f22fbf7c4806af77727e42164736f6c63430007030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e610081565b005b610058610113565b6040516100659190610214565b60405180910390f35b61004e61007c3660046101e6565b610122565b6100896101e2565b6001600160a01b031661009a610113565b6001600160a01b0316146100c95760405162461bcd60e51b81526004016100c09061026e565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61012a6101e2565b6001600160a01b031661013b610113565b6001600160a01b0316146101615760405162461bcd60e51b81526004016100c09061026e565b6001600160a01b0381166101875760405162461bcd60e51b81526004016100c090610228565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000602082840312156101f7578081fd5b81356001600160a01b038116811461020d578182fd5b9392505050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220a1cfbf41af7d2539103cb7db809ee7601ec575940f22fbf7c4806af77727e42164736f6c63430007030033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1298:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:35"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:3:35",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "254:1:35",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:35"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:35"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:35",
                "type": ""
              }
            ],
            "src": "14:306:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "426:102:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "436:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "448:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "459:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "444:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "444:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "436:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "478:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "493:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "509:3:35",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "514:1:35",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "505:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "505:11:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "518:1:35",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "501:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "501:19:35"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "489:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:32:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "471:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "471:51:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "471:51:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "395:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "406:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "417:4:35",
                "type": ""
              }
            ],
            "src": "325:203:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "707:228:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "724:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "735:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "717:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "717:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "717:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "758:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "769:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "754:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "754:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "774:2:35",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "747:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "747:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "747:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "797:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "808:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "793:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "793:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "813:34:35",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "786:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:62:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "786:62:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "868:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "879:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "864:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "864:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "884:8:35",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "857:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "857:36:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "857:36:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "902:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "914:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "925:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "910:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:19:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "902:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "684:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "698:4:35",
                "type": ""
              }
            ],
            "src": "533:402:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1114:182:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1131:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1142:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1124:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1124:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1124:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1165:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1176:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1161:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1181:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1154:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1154:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1154:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1204:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1215:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1200:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1200:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1220:34:35",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1193:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:62:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1193:62:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1264:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1276:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1287:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1272:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1272:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1264:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1091:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1105:4:35",
                "type": ""
              }
            ],
            "src": "940:356:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "367:144:11:-:0;;;;;;;;;;;;-1:-1:-1;884:17:0;904:12;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:0;-1:-1:-1;;;;;926:18:0;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:0;959:43;;926:6;;959:43;850:159;367:144:11;;598:104:8;685:10;598:104;:::o;367:144:11:-;;;;;;;",
  "deployedSourceMap": "367:144:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1717:145:0;;;:::i;:::-;;1085:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2011:240;;;;;;:::i;:::-;;:::i;1717:145::-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;-1:-1:-1;;;1289:68:0;;;;;;;:::i;:::-;;;;;;;;;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:0;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;;;;;1836:19:0::1;::::0;;1717:145::o;1085:85::-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;2011:240::-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;-1:-1:-1;;;1289:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;:::i;:::-;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;598:104:8:-;685:10;598:104;:::o;14:306:35:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:35;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:35:o;325:203::-;-1:-1:-1;;;;;489:32:35;;;;471:51;;459:2;444:18;;426:102::o;533:402::-;735:2;717:21;;;774:2;754:18;;;747:30;813:34;808:2;793:18;;786:62;-1:-1:-1;;;879:2:35;864:18;;857:36;925:3;910:19;;707:228::o;940:356::-;1142:2;1124:21;;;1161:18;;;1154:30;1220:34;1215:2;1200:18;;1193:62;1287:2;1272:18;;1114:182::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.7;\npragma experimental ABIEncoderV2;\n\nimport \"./lib/RLPReader.sol\";\nimport {IERC20} from \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\";\nimport {Ownable} from \"openzeppelin-solidity/contracts/access/Ownable.sol\";\n\ncontract EthereumBridge is Ownable {\n    using RLPReader for RLPReader.RLPItem;\n    using RLPReader for bytes;\n    using SafeERC20 for IERC20;\n}\n",
  "sourcePath": "/Users/gupadhyaya/go/src/github.com/harmony-one/horizon/contracts/EthereumBridge.sol",
  "ast": {
    "absolutePath": "project:/contracts/EthereumBridge.sol",
    "exportedSymbols": {
      "EthereumBridge": [
        2196
      ],
      "IERC20": [
        1175
      ],
      "Ownable": [
        109
      ],
      "RLPReader": [
        15341
      ],
      "SafeERC20": [
        1388
      ]
    },
    "id": 2197,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2176,
        "literals": [
          "solidity",
          "^",
          "0.7"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:21:11"
      },
      {
        "id": 2177,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "61:33:11"
      },
      {
        "absolutePath": "project:/contracts/lib/RLPReader.sol",
        "file": "./lib/RLPReader.sol",
        "id": 2178,
        "nodeType": "ImportDirective",
        "scope": 2197,
        "sourceUnit": 15342,
        "src": "96:29:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 2180,
        "nodeType": "ImportDirective",
        "scope": 2197,
        "sourceUnit": 1176,
        "src": "126:78:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2179,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "134:6:11",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "id": 2182,
        "nodeType": "ImportDirective",
        "scope": 2197,
        "sourceUnit": 1389,
        "src": "205:84:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2181,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "213:9:11",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 2184,
        "nodeType": "ImportDirective",
        "scope": 2197,
        "sourceUnit": 110,
        "src": "290:75:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2183,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "298:7:11",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2185,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 109,
              "src": "394:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$109",
                "typeString": "contract Ownable"
              }
            },
            "id": 2186,
            "nodeType": "InheritanceSpecifier",
            "src": "394:7:11"
          }
        ],
        "contractDependencies": [
          109,
          1707
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2196,
        "linearizedBaseContracts": [
          2196,
          109,
          1707
        ],
        "name": "EthereumBridge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2189,
            "libraryName": {
              "id": 2187,
              "name": "RLPReader",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15341,
              "src": "414:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RLPReader_$15341",
                "typeString": "library RLPReader"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "408:38:11",
            "typeName": {
              "id": 2188,
              "name": "RLPReader.RLPItem",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14600,
              "src": "428:17:11",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_RLPItem_$14600_storage_ptr",
                "typeString": "struct RLPReader.RLPItem"
              }
            }
          },
          {
            "id": 2192,
            "libraryName": {
              "id": 2190,
              "name": "RLPReader",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15341,
              "src": "457:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RLPReader_$15341",
                "typeString": "library RLPReader"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "451:26:11",
            "typeName": {
              "id": 2191,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "471:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 2195,
            "libraryName": {
              "id": 2193,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1388,
              "src": "488:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$1388",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "482:27:11",
            "typeName": {
              "id": 2194,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1175,
              "src": "502:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1175",
                "typeString": "contract IERC20"
              }
            }
          }
        ],
        "scope": 2197,
        "src": "367:144:11"
      }
    ],
    "src": "39:473:11"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/EthereumBridge.sol",
      "exportedSymbols": {
        "EthereumBridge": [
          2196
        ],
        "IERC20": [
          1175
        ],
        "Ownable": [
          109
        ],
        "RLPReader": [
          15341
        ],
        "SafeERC20": [
          1388
        ]
      },
      "license": "UNLICENSED"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7"
          ]
        },
        "id": 2176,
        "name": "PragmaDirective",
        "src": "39:21:11"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2177,
        "name": "PragmaDirective",
        "src": "61:33:11"
      },
      {
        "attributes": {
          "SourceUnit": 15342,
          "absolutePath": "project:/contracts/lib/RLPReader.sol",
          "file": "./lib/RLPReader.sol",
          "scope": 2197,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2178,
        "name": "ImportDirective",
        "src": "96:29:11"
      },
      {
        "attributes": {
          "SourceUnit": 1176,
          "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
          "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
          "scope": 2197,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "IERC20"
                },
                "id": 2179,
                "name": "Identifier",
                "src": "134:6:11"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2180,
        "name": "ImportDirective",
        "src": "126:78:11"
      },
      {
        "attributes": {
          "SourceUnit": 1389,
          "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
          "file": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
          "scope": 2197,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "SafeERC20"
                },
                "id": 2181,
                "name": "Identifier",
                "src": "213:9:11"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2182,
        "name": "ImportDirective",
        "src": "205:84:11"
      },
      {
        "attributes": {
          "SourceUnit": 110,
          "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
          "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
          "scope": 2197,
          "symbolAliases": [
            {
              "foreign": {
                "attributes": {
                  "overloadedDeclarations": [
                    null
                  ],
                  "value": "Ownable"
                },
                "id": 2183,
                "name": "Identifier",
                "src": "298:7:11"
              }
            }
          ],
          "unitAlias": ""
        },
        "id": 2184,
        "name": "ImportDirective",
        "src": "290:75:11"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            109,
            1707
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2196,
            109,
            1707
          ],
          "name": "EthereumBridge",
          "scope": 2197
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 109,
                  "type": "contract Ownable"
                },
                "id": 2185,
                "name": "UserDefinedTypeName",
                "src": "394:7:11"
              }
            ],
            "id": 2186,
            "name": "InheritanceSpecifier",
            "src": "394:7:11"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "RLPReader",
                  "referencedDeclaration": 15341,
                  "type": "library RLPReader"
                },
                "id": 2187,
                "name": "UserDefinedTypeName",
                "src": "414:9:11"
              },
              {
                "attributes": {
                  "name": "RLPReader.RLPItem",
                  "referencedDeclaration": 14600,
                  "type": "struct RLPReader.RLPItem"
                },
                "id": 2188,
                "name": "UserDefinedTypeName",
                "src": "428:17:11"
              }
            ],
            "id": 2189,
            "name": "UsingForDirective",
            "src": "408:38:11"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "RLPReader",
                  "referencedDeclaration": 15341,
                  "type": "library RLPReader"
                },
                "id": 2190,
                "name": "UserDefinedTypeName",
                "src": "457:9:11"
              },
              {
                "attributes": {
                  "name": "bytes",
                  "type": "bytes"
                },
                "id": 2191,
                "name": "ElementaryTypeName",
                "src": "471:5:11"
              }
            ],
            "id": 2192,
            "name": "UsingForDirective",
            "src": "451:26:11"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeERC20",
                  "referencedDeclaration": 1388,
                  "type": "library SafeERC20"
                },
                "id": 2193,
                "name": "UserDefinedTypeName",
                "src": "488:9:11"
              },
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 1175,
                  "type": "contract IERC20"
                },
                "id": 2194,
                "name": "UserDefinedTypeName",
                "src": "502:6:11"
              }
            ],
            "id": 2195,
            "name": "UsingForDirective",
            "src": "482:27:11"
          }
        ],
        "id": 2196,
        "name": "ContractDefinition",
        "src": "367:144:11"
      }
    ],
    "id": 2197,
    "name": "SourceUnit",
    "src": "39:473:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.3+commit.9bfce1f6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-17T01:51:56.697Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}